#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace EVEASS_V1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EVE DB")]
	public partial class DCEVEDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertCharacterSkills(CharacterSkills instance);
    partial void UpdateCharacterSkills(CharacterSkills instance);
    partial void DeleteCharacterSkills(CharacterSkills instance);
    partial void InsertindustryActivitySkills(industryActivitySkills instance);
    partial void UpdateindustryActivitySkills(industryActivitySkills instance);
    partial void DeleteindustryActivitySkills(industryActivitySkills instance);
    partial void InsertinvTypes(invTypes instance);
    partial void UpdateinvTypes(invTypes instance);
    partial void DeleteinvTypes(invTypes instance);
    partial void InsertCharacters(Characters instance);
    partial void UpdateCharacters(Characters instance);
    partial void DeleteCharacters(Characters instance);
    partial void InsertBluePrints(BluePrints instance);
    partial void UpdateBluePrints(BluePrints instance);
    partial void DeleteBluePrints(BluePrints instance);
    partial void InsertindustryActivityMaterials(industryActivityMaterials instance);
    partial void UpdateindustryActivityMaterials(industryActivityMaterials instance);
    partial void DeleteindustryActivityMaterials(industryActivityMaterials instance);
    partial void InsertindustryActivities(industryActivities instance);
    partial void UpdateindustryActivities(industryActivities instance);
    partial void DeleteindustryActivities(industryActivities instance);
    partial void InsertOwnedBluePrints(OwnedBluePrints instance);
    partial void UpdateOwnedBluePrints(OwnedBluePrints instance);
    partial void DeleteOwnedBluePrints(OwnedBluePrints instance);
    #endregion
		
		public DCEVEDataContext() : 
				base(global::EVEASS_V1.Properties.Settings.Default.EVE_DBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DCEVEDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCEVEDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCEVEDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCEVEDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CharacterSkills> CharacterSkills
		{
			get
			{
				return this.GetTable<CharacterSkills>();
			}
		}
		
		public System.Data.Linq.Table<industryActivitySkills> industryActivitySkills
		{
			get
			{
				return this.GetTable<industryActivitySkills>();
			}
		}
		
		public System.Data.Linq.Table<invTypes> invTypes
		{
			get
			{
				return this.GetTable<invTypes>();
			}
		}
		
		public System.Data.Linq.Table<Characters> Characters
		{
			get
			{
				return this.GetTable<Characters>();
			}
		}
		
		public System.Data.Linq.Table<BluePrints> BluePrints
		{
			get
			{
				return this.GetTable<BluePrints>();
			}
		}
		
		public System.Data.Linq.Table<industryActivityMaterials> industryActivityMaterials
		{
			get
			{
				return this.GetTable<industryActivityMaterials>();
			}
		}
		
		public System.Data.Linq.Table<industryActivities> industryActivities
		{
			get
			{
				return this.GetTable<industryActivities>();
			}
		}
		
		public System.Data.Linq.Table<OwnedBluePrints> OwnedBluePrints
		{
			get
			{
				return this.GetTable<OwnedBluePrints>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CharacterSkills")]
	public partial class CharacterSkills : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _CharacterID;
		
		private int _SkillID;
		
		private int _Level;
		
		private EntityRef<invTypes> _invTypes;
		
		private EntityRef<Characters> _Characters;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCharacterIDChanging(long value);
    partial void OnCharacterIDChanged();
    partial void OnSkillIDChanging(int value);
    partial void OnSkillIDChanged();
    partial void OnLevelChanging(int value);
    partial void OnLevelChanged();
    #endregion
		
		public CharacterSkills()
		{
			this._invTypes = default(EntityRef<invTypes>);
			this._Characters = default(EntityRef<Characters>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharacterID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long CharacterID
		{
			get
			{
				return this._CharacterID;
			}
			set
			{
				if ((this._CharacterID != value))
				{
					if (this._Characters.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCharacterIDChanging(value);
					this.SendPropertyChanging();
					this._CharacterID = value;
					this.SendPropertyChanged("CharacterID");
					this.OnCharacterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SkillID
		{
			get
			{
				return this._SkillID;
			}
			set
			{
				if ((this._SkillID != value))
				{
					if (this._invTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSkillIDChanging(value);
					this.SendPropertyChanging();
					this._SkillID = value;
					this.SendPropertyChanged("SkillID");
					this.OnSkillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="Int NOT NULL")]
		public int Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="invTypes_CharacterSkills", Storage="_invTypes", ThisKey="SkillID", OtherKey="typeID", IsForeignKey=true)]
		public invTypes invTypes
		{
			get
			{
				return this._invTypes.Entity;
			}
			set
			{
				invTypes previousValue = this._invTypes.Entity;
				if (((previousValue != value) 
							|| (this._invTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._invTypes.Entity = null;
						previousValue.CharacterSkills.Remove(this);
					}
					this._invTypes.Entity = value;
					if ((value != null))
					{
						value.CharacterSkills.Add(this);
						this._SkillID = value.typeID;
					}
					else
					{
						this._SkillID = default(int);
					}
					this.SendPropertyChanged("invTypes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Characters_CharacterSkills", Storage="_Characters", ThisKey="CharacterID", OtherKey="CharacterID", IsForeignKey=true)]
		public Characters Characters
		{
			get
			{
				return this._Characters.Entity;
			}
			set
			{
				Characters previousValue = this._Characters.Entity;
				if (((previousValue != value) 
							|| (this._Characters.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Characters.Entity = null;
						previousValue.CharacterSkills.Remove(this);
					}
					this._Characters.Entity = value;
					if ((value != null))
					{
						value.CharacterSkills.Add(this);
						this._CharacterID = value.CharacterID;
					}
					else
					{
						this._CharacterID = default(long);
					}
					this.SendPropertyChanged("Characters");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.industryActivitySkills")]
	public partial class industryActivitySkills : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _blueprintTypeID;
		
		private int _activityID;
		
		private int _skillID;
		
		private int _level;
		
		private EntityRef<invTypes> _invTypes;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnblueprintTypeIDChanging(int value);
    partial void OnblueprintTypeIDChanged();
    partial void OnactivityIDChanging(int value);
    partial void OnactivityIDChanged();
    partial void OnskillIDChanging(int value);
    partial void OnskillIDChanged();
    partial void OnlevelChanging(int value);
    partial void OnlevelChanged();
    #endregion
		
		public industryActivitySkills()
		{
			this._invTypes = default(EntityRef<invTypes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blueprintTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int blueprintTypeID
		{
			get
			{
				return this._blueprintTypeID;
			}
			set
			{
				if ((this._blueprintTypeID != value))
				{
					this.OnblueprintTypeIDChanging(value);
					this.SendPropertyChanging();
					this._blueprintTypeID = value;
					this.SendPropertyChanged("blueprintTypeID");
					this.OnblueprintTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int activityID
		{
			get
			{
				return this._activityID;
			}
			set
			{
				if ((this._activityID != value))
				{
					this.OnactivityIDChanging(value);
					this.SendPropertyChanging();
					this._activityID = value;
					this.SendPropertyChanged("activityID");
					this.OnactivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skillID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int skillID
		{
			get
			{
				return this._skillID;
			}
			set
			{
				if ((this._skillID != value))
				{
					if (this._invTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnskillIDChanging(value);
					this.SendPropertyChanging();
					this._skillID = value;
					this.SendPropertyChanged("skillID");
					this.OnskillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[level]", Storage="_level", DbType="Int NOT NULL")]
		public int level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this.OnlevelChanging(value);
					this.SendPropertyChanging();
					this._level = value;
					this.SendPropertyChanged("level");
					this.OnlevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="invTypes_industryActivitySkills", Storage="_invTypes", ThisKey="skillID", OtherKey="typeID", IsForeignKey=true)]
		public invTypes invTypes
		{
			get
			{
				return this._invTypes.Entity;
			}
			set
			{
				invTypes previousValue = this._invTypes.Entity;
				if (((previousValue != value) 
							|| (this._invTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._invTypes.Entity = null;
						previousValue.industryActivitySkills.Remove(this);
					}
					this._invTypes.Entity = value;
					if ((value != null))
					{
						value.industryActivitySkills.Add(this);
						this._skillID = value.typeID;
					}
					else
					{
						this._skillID = default(int);
					}
					this.SendPropertyChanged("invTypes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invTypes")]
	public partial class invTypes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _typeID;
		
		private int _groupID;
		
		private string _typeName;
		
		private string _description;
		
		private System.Nullable<double> _mass;
		
		private System.Nullable<double> _volume;
		
		private System.Nullable<double> _packagedVolume;
		
		private System.Nullable<double> _capacity;
		
		private System.Nullable<int> _portionSize;
		
		private System.Nullable<int> _factionID;
		
		private System.Nullable<int> _raceID;
		
		private System.Nullable<double> _basePrice;
		
		private bool _published;
		
		private System.Nullable<int> _marketGroupID;
		
		private System.Nullable<int> _graphicID;
		
		private System.Nullable<double> _radius;
		
		private System.Nullable<int> _iconID;
		
		private System.Nullable<int> _soundID;
		
		private string _sofFactionName;
		
		private System.Nullable<int> _sofMaterialSetID;
		
		private string _typeNameCN;
		
		private EntitySet<CharacterSkills> _CharacterSkills;
		
		private EntitySet<industryActivitySkills> _industryActivitySkills;
		
		private EntityRef<BluePrints> _BluePrints;
		
		private EntitySet<industryActivityMaterials> _industryActivityMaterials;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntypeIDChanging(int value);
    partial void OntypeIDChanged();
    partial void OngroupIDChanging(int value);
    partial void OngroupIDChanged();
    partial void OntypeNameChanging(string value);
    partial void OntypeNameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnmassChanging(System.Nullable<double> value);
    partial void OnmassChanged();
    partial void OnvolumeChanging(System.Nullable<double> value);
    partial void OnvolumeChanged();
    partial void OnpackagedVolumeChanging(System.Nullable<double> value);
    partial void OnpackagedVolumeChanged();
    partial void OncapacityChanging(System.Nullable<double> value);
    partial void OncapacityChanged();
    partial void OnportionSizeChanging(System.Nullable<int> value);
    partial void OnportionSizeChanged();
    partial void OnfactionIDChanging(System.Nullable<int> value);
    partial void OnfactionIDChanged();
    partial void OnraceIDChanging(System.Nullable<int> value);
    partial void OnraceIDChanged();
    partial void OnbasePriceChanging(System.Nullable<double> value);
    partial void OnbasePriceChanged();
    partial void OnpublishedChanging(bool value);
    partial void OnpublishedChanged();
    partial void OnmarketGroupIDChanging(System.Nullable<int> value);
    partial void OnmarketGroupIDChanged();
    partial void OngraphicIDChanging(System.Nullable<int> value);
    partial void OngraphicIDChanged();
    partial void OnradiusChanging(System.Nullable<double> value);
    partial void OnradiusChanged();
    partial void OniconIDChanging(System.Nullable<int> value);
    partial void OniconIDChanged();
    partial void OnsoundIDChanging(System.Nullable<int> value);
    partial void OnsoundIDChanged();
    partial void OnsofFactionNameChanging(string value);
    partial void OnsofFactionNameChanged();
    partial void OnsofMaterialSetIDChanging(System.Nullable<int> value);
    partial void OnsofMaterialSetIDChanged();
    partial void OntypeNameCNChanging(string value);
    partial void OntypeNameCNChanged();
    #endregion
		
		public invTypes()
		{
			this._CharacterSkills = new EntitySet<CharacterSkills>(new Action<CharacterSkills>(this.attach_CharacterSkills), new Action<CharacterSkills>(this.detach_CharacterSkills));
			this._industryActivitySkills = new EntitySet<industryActivitySkills>(new Action<industryActivitySkills>(this.attach_industryActivitySkills), new Action<industryActivitySkills>(this.detach_industryActivitySkills));
			this._BluePrints = default(EntityRef<BluePrints>);
			this._industryActivityMaterials = new EntitySet<industryActivityMaterials>(new Action<industryActivityMaterials>(this.attach_industryActivityMaterials), new Action<industryActivityMaterials>(this.detach_industryActivityMaterials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this.OntypeIDChanging(value);
					this.SendPropertyChanging();
					this._typeID = value;
					this.SendPropertyChanged("typeID");
					this.OntypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupID", DbType="Int NOT NULL")]
		public int groupID
		{
			get
			{
				return this._groupID;
			}
			set
			{
				if ((this._groupID != value))
				{
					this.OngroupIDChanging(value);
					this.SendPropertyChanging();
					this._groupID = value;
					this.SendPropertyChanged("groupID");
					this.OngroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string typeName
		{
			get
			{
				return this._typeName;
			}
			set
			{
				if ((this._typeName != value))
				{
					this.OntypeNameChanging(value);
					this.SendPropertyChanging();
					this._typeName = value;
					this.SendPropertyChanged("typeName");
					this.OntypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mass", DbType="Float")]
		public System.Nullable<double> mass
		{
			get
			{
				return this._mass;
			}
			set
			{
				if ((this._mass != value))
				{
					this.OnmassChanging(value);
					this.SendPropertyChanging();
					this._mass = value;
					this.SendPropertyChanged("mass");
					this.OnmassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_volume", DbType="Float")]
		public System.Nullable<double> volume
		{
			get
			{
				return this._volume;
			}
			set
			{
				if ((this._volume != value))
				{
					this.OnvolumeChanging(value);
					this.SendPropertyChanging();
					this._volume = value;
					this.SendPropertyChanged("volume");
					this.OnvolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packagedVolume", DbType="Float")]
		public System.Nullable<double> packagedVolume
		{
			get
			{
				return this._packagedVolume;
			}
			set
			{
				if ((this._packagedVolume != value))
				{
					this.OnpackagedVolumeChanging(value);
					this.SendPropertyChanging();
					this._packagedVolume = value;
					this.SendPropertyChanged("packagedVolume");
					this.OnpackagedVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capacity", DbType="Float")]
		public System.Nullable<double> capacity
		{
			get
			{
				return this._capacity;
			}
			set
			{
				if ((this._capacity != value))
				{
					this.OncapacityChanging(value);
					this.SendPropertyChanging();
					this._capacity = value;
					this.SendPropertyChanged("capacity");
					this.OncapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_portionSize", DbType="Int")]
		public System.Nullable<int> portionSize
		{
			get
			{
				return this._portionSize;
			}
			set
			{
				if ((this._portionSize != value))
				{
					this.OnportionSizeChanging(value);
					this.SendPropertyChanging();
					this._portionSize = value;
					this.SendPropertyChanged("portionSize");
					this.OnportionSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factionID", DbType="Int")]
		public System.Nullable<int> factionID
		{
			get
			{
				return this._factionID;
			}
			set
			{
				if ((this._factionID != value))
				{
					this.OnfactionIDChanging(value);
					this.SendPropertyChanging();
					this._factionID = value;
					this.SendPropertyChanged("factionID");
					this.OnfactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_raceID", DbType="Int")]
		public System.Nullable<int> raceID
		{
			get
			{
				return this._raceID;
			}
			set
			{
				if ((this._raceID != value))
				{
					this.OnraceIDChanging(value);
					this.SendPropertyChanging();
					this._raceID = value;
					this.SendPropertyChanged("raceID");
					this.OnraceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_basePrice", DbType="Float")]
		public System.Nullable<double> basePrice
		{
			get
			{
				return this._basePrice;
			}
			set
			{
				if ((this._basePrice != value))
				{
					this.OnbasePriceChanging(value);
					this.SendPropertyChanging();
					this._basePrice = value;
					this.SendPropertyChanged("basePrice");
					this.OnbasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_published", DbType="Bit NOT NULL")]
		public bool published
		{
			get
			{
				return this._published;
			}
			set
			{
				if ((this._published != value))
				{
					this.OnpublishedChanging(value);
					this.SendPropertyChanging();
					this._published = value;
					this.SendPropertyChanged("published");
					this.OnpublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marketGroupID", DbType="Int")]
		public System.Nullable<int> marketGroupID
		{
			get
			{
				return this._marketGroupID;
			}
			set
			{
				if ((this._marketGroupID != value))
				{
					this.OnmarketGroupIDChanging(value);
					this.SendPropertyChanging();
					this._marketGroupID = value;
					this.SendPropertyChanged("marketGroupID");
					this.OnmarketGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_graphicID", DbType="Int")]
		public System.Nullable<int> graphicID
		{
			get
			{
				return this._graphicID;
			}
			set
			{
				if ((this._graphicID != value))
				{
					this.OngraphicIDChanging(value);
					this.SendPropertyChanging();
					this._graphicID = value;
					this.SendPropertyChanged("graphicID");
					this.OngraphicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_radius", DbType="Float")]
		public System.Nullable<double> radius
		{
			get
			{
				return this._radius;
			}
			set
			{
				if ((this._radius != value))
				{
					this.OnradiusChanging(value);
					this.SendPropertyChanging();
					this._radius = value;
					this.SendPropertyChanged("radius");
					this.OnradiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iconID", DbType="Int")]
		public System.Nullable<int> iconID
		{
			get
			{
				return this._iconID;
			}
			set
			{
				if ((this._iconID != value))
				{
					this.OniconIDChanging(value);
					this.SendPropertyChanging();
					this._iconID = value;
					this.SendPropertyChanged("iconID");
					this.OniconIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soundID", DbType="Int")]
		public System.Nullable<int> soundID
		{
			get
			{
				return this._soundID;
			}
			set
			{
				if ((this._soundID != value))
				{
					this.OnsoundIDChanging(value);
					this.SendPropertyChanging();
					this._soundID = value;
					this.SendPropertyChanged("soundID");
					this.OnsoundIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sofFactionName", DbType="NVarChar(100)")]
		public string sofFactionName
		{
			get
			{
				return this._sofFactionName;
			}
			set
			{
				if ((this._sofFactionName != value))
				{
					this.OnsofFactionNameChanging(value);
					this.SendPropertyChanging();
					this._sofFactionName = value;
					this.SendPropertyChanged("sofFactionName");
					this.OnsofFactionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sofMaterialSetID", DbType="Int")]
		public System.Nullable<int> sofMaterialSetID
		{
			get
			{
				return this._sofMaterialSetID;
			}
			set
			{
				if ((this._sofMaterialSetID != value))
				{
					this.OnsofMaterialSetIDChanging(value);
					this.SendPropertyChanging();
					this._sofMaterialSetID = value;
					this.SendPropertyChanged("sofMaterialSetID");
					this.OnsofMaterialSetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeNameCN", DbType="NVarChar(MAX)")]
		public string typeNameCN
		{
			get
			{
				return this._typeNameCN;
			}
			set
			{
				if ((this._typeNameCN != value))
				{
					this.OntypeNameCNChanging(value);
					this.SendPropertyChanging();
					this._typeNameCN = value;
					this.SendPropertyChanged("typeNameCN");
					this.OntypeNameCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="invTypes_CharacterSkills", Storage="_CharacterSkills", ThisKey="typeID", OtherKey="SkillID")]
		public EntitySet<CharacterSkills> CharacterSkills
		{
			get
			{
				return this._CharacterSkills;
			}
			set
			{
				this._CharacterSkills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="invTypes_industryActivitySkills", Storage="_industryActivitySkills", ThisKey="typeID", OtherKey="skillID")]
		public EntitySet<industryActivitySkills> industryActivitySkills
		{
			get
			{
				return this._industryActivitySkills;
			}
			set
			{
				this._industryActivitySkills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="invTypes_BluePrints", Storage="_BluePrints", ThisKey="typeID", OtherKey="BluePrintTypeID", IsUnique=true, IsForeignKey=false)]
		public BluePrints BluePrints
		{
			get
			{
				return this._BluePrints.Entity;
			}
			set
			{
				BluePrints previousValue = this._BluePrints.Entity;
				if (((previousValue != value) 
							|| (this._BluePrints.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BluePrints.Entity = null;
						previousValue.invTypes = null;
					}
					this._BluePrints.Entity = value;
					if ((value != null))
					{
						value.invTypes = this;
					}
					this.SendPropertyChanged("BluePrints");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="invTypes_industryActivityMaterials", Storage="_industryActivityMaterials", ThisKey="typeID", OtherKey="materialTypeID")]
		public EntitySet<industryActivityMaterials> industryActivityMaterials
		{
			get
			{
				return this._industryActivityMaterials;
			}
			set
			{
				this._industryActivityMaterials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CharacterSkills(CharacterSkills entity)
		{
			this.SendPropertyChanging();
			entity.invTypes = this;
		}
		
		private void detach_CharacterSkills(CharacterSkills entity)
		{
			this.SendPropertyChanging();
			entity.invTypes = null;
		}
		
		private void attach_industryActivitySkills(industryActivitySkills entity)
		{
			this.SendPropertyChanging();
			entity.invTypes = this;
		}
		
		private void detach_industryActivitySkills(industryActivitySkills entity)
		{
			this.SendPropertyChanging();
			entity.invTypes = null;
		}
		
		private void attach_industryActivityMaterials(industryActivityMaterials entity)
		{
			this.SendPropertyChanging();
			entity.invTypes = this;
		}
		
		private void detach_industryActivityMaterials(industryActivityMaterials entity)
		{
			this.SendPropertyChanging();
			entity.invTypes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Characters")]
	public partial class Characters : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _CharacterID;
		
		private int _CorporationID;
		
		private string _CharacterName;
		
		private int _ManuCapability;
		
		private int _NumManufactureLine;
		
		private int _ReseCapability;
		
		private int _NumResearchLine;
		
		private string _RefreshToken;
		
		private string _AccessToken;
		
		private System.DateTime _AccessTokenExpiredTime;
		
		private bool _Market;
		
		private int _NumMarketOrder;
		
		private bool _Corporation;
		
		private EntitySet<CharacterSkills> _CharacterSkills;
		
		private EntitySet<OwnedBluePrints> _OwnedBluePrints;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCharacterIDChanging(long value);
    partial void OnCharacterIDChanged();
    partial void OnCorporationIDChanging(int value);
    partial void OnCorporationIDChanged();
    partial void OnCharacterNameChanging(string value);
    partial void OnCharacterNameChanged();
    partial void OnManuCapabilityChanging(int value);
    partial void OnManuCapabilityChanged();
    partial void OnNumManufactureLineChanging(int value);
    partial void OnNumManufactureLineChanged();
    partial void OnReseCapabilityChanging(int value);
    partial void OnReseCapabilityChanged();
    partial void OnNumResearchLineChanging(int value);
    partial void OnNumResearchLineChanged();
    partial void OnRefreshTokenChanging(string value);
    partial void OnRefreshTokenChanged();
    partial void OnAccessTokenChanging(string value);
    partial void OnAccessTokenChanged();
    partial void OnAccessTokenExpiredTimeChanging(System.DateTime value);
    partial void OnAccessTokenExpiredTimeChanged();
    partial void OnMarketChanging(bool value);
    partial void OnMarketChanged();
    partial void OnNumMarketOrderChanging(int value);
    partial void OnNumMarketOrderChanged();
    partial void OnCorporationChanging(bool value);
    partial void OnCorporationChanged();
    #endregion
		
		public Characters()
		{
			this._CharacterSkills = new EntitySet<CharacterSkills>(new Action<CharacterSkills>(this.attach_CharacterSkills), new Action<CharacterSkills>(this.detach_CharacterSkills));
			this._OwnedBluePrints = new EntitySet<OwnedBluePrints>(new Action<OwnedBluePrints>(this.attach_OwnedBluePrints), new Action<OwnedBluePrints>(this.detach_OwnedBluePrints));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharacterID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long CharacterID
		{
			get
			{
				return this._CharacterID;
			}
			set
			{
				if ((this._CharacterID != value))
				{
					this.OnCharacterIDChanging(value);
					this.SendPropertyChanging();
					this._CharacterID = value;
					this.SendPropertyChanged("CharacterID");
					this.OnCharacterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorporationID", DbType="Int NOT NULL")]
		public int CorporationID
		{
			get
			{
				return this._CorporationID;
			}
			set
			{
				if ((this._CorporationID != value))
				{
					this.OnCorporationIDChanging(value);
					this.SendPropertyChanging();
					this._CorporationID = value;
					this.SendPropertyChanged("CorporationID");
					this.OnCorporationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharacterName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CharacterName
		{
			get
			{
				return this._CharacterName;
			}
			set
			{
				if ((this._CharacterName != value))
				{
					this.OnCharacterNameChanging(value);
					this.SendPropertyChanging();
					this._CharacterName = value;
					this.SendPropertyChanged("CharacterName");
					this.OnCharacterNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManuCapability", DbType="Int NOT NULL")]
		public int ManuCapability
		{
			get
			{
				return this._ManuCapability;
			}
			set
			{
				if ((this._ManuCapability != value))
				{
					this.OnManuCapabilityChanging(value);
					this.SendPropertyChanging();
					this._ManuCapability = value;
					this.SendPropertyChanged("ManuCapability");
					this.OnManuCapabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumManufactureLine", DbType="Int NOT NULL")]
		public int NumManufactureLine
		{
			get
			{
				return this._NumManufactureLine;
			}
			set
			{
				if ((this._NumManufactureLine != value))
				{
					this.OnNumManufactureLineChanging(value);
					this.SendPropertyChanging();
					this._NumManufactureLine = value;
					this.SendPropertyChanged("NumManufactureLine");
					this.OnNumManufactureLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReseCapability", DbType="Int NOT NULL")]
		public int ReseCapability
		{
			get
			{
				return this._ReseCapability;
			}
			set
			{
				if ((this._ReseCapability != value))
				{
					this.OnReseCapabilityChanging(value);
					this.SendPropertyChanging();
					this._ReseCapability = value;
					this.SendPropertyChanged("ReseCapability");
					this.OnReseCapabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumResearchLine", DbType="Int NOT NULL")]
		public int NumResearchLine
		{
			get
			{
				return this._NumResearchLine;
			}
			set
			{
				if ((this._NumResearchLine != value))
				{
					this.OnNumResearchLineChanging(value);
					this.SendPropertyChanging();
					this._NumResearchLine = value;
					this.SendPropertyChanged("NumResearchLine");
					this.OnNumResearchLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefreshToken", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		private string RefreshToken
		{
			get
			{
				return this._RefreshToken;
			}
			set
			{
				if ((this._RefreshToken != value))
				{
					this.OnRefreshTokenChanging(value);
					this.SendPropertyChanging();
					this._RefreshToken = value;
					this.SendPropertyChanged("RefreshToken");
					this.OnRefreshTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessToken", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		private string AccessToken
		{
			get
			{
				return this._AccessToken;
			}
			set
			{
				if ((this._AccessToken != value))
				{
					this.OnAccessTokenChanging(value);
					this.SendPropertyChanging();
					this._AccessToken = value;
					this.SendPropertyChanged("AccessToken");
					this.OnAccessTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessTokenExpiredTime", DbType="DateTime NOT NULL")]
		private System.DateTime AccessTokenExpiredTime
		{
			get
			{
				return this._AccessTokenExpiredTime;
			}
			set
			{
				if ((this._AccessTokenExpiredTime != value))
				{
					this.OnAccessTokenExpiredTimeChanging(value);
					this.SendPropertyChanging();
					this._AccessTokenExpiredTime = value;
					this.SendPropertyChanged("AccessTokenExpiredTime");
					this.OnAccessTokenExpiredTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Market", DbType="Bit NOT NULL")]
		public bool Market
		{
			get
			{
				return this._Market;
			}
			set
			{
				if ((this._Market != value))
				{
					this.OnMarketChanging(value);
					this.SendPropertyChanging();
					this._Market = value;
					this.SendPropertyChanged("Market");
					this.OnMarketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumMarketOrder", DbType="Int NOT NULL")]
		public int NumMarketOrder
		{
			get
			{
				return this._NumMarketOrder;
			}
			set
			{
				if ((this._NumMarketOrder != value))
				{
					this.OnNumMarketOrderChanging(value);
					this.SendPropertyChanging();
					this._NumMarketOrder = value;
					this.SendPropertyChanged("NumMarketOrder");
					this.OnNumMarketOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corporation", DbType="Bit NOT NULL")]
		public bool Corporation
		{
			get
			{
				return this._Corporation;
			}
			set
			{
				if ((this._Corporation != value))
				{
					this.OnCorporationChanging(value);
					this.SendPropertyChanging();
					this._Corporation = value;
					this.SendPropertyChanged("Corporation");
					this.OnCorporationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Characters_CharacterSkills", Storage="_CharacterSkills", ThisKey="CharacterID", OtherKey="CharacterID")]
		public EntitySet<CharacterSkills> CharacterSkills
		{
			get
			{
				return this._CharacterSkills;
			}
			set
			{
				this._CharacterSkills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Characters_OwnedBluePrints", Storage="_OwnedBluePrints", ThisKey="CharacterID", OtherKey="Owner")]
		public EntitySet<OwnedBluePrints> OwnedBluePrints
		{
			get
			{
				return this._OwnedBluePrints;
			}
			set
			{
				this._OwnedBluePrints.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CharacterSkills(CharacterSkills entity)
		{
			this.SendPropertyChanging();
			entity.Characters = this;
		}
		
		private void detach_CharacterSkills(CharacterSkills entity)
		{
			this.SendPropertyChanging();
			entity.Characters = null;
		}
		
		private void attach_OwnedBluePrints(OwnedBluePrints entity)
		{
			this.SendPropertyChanging();
			entity.Characters = this;
		}
		
		private void detach_OwnedBluePrints(OwnedBluePrints entity)
		{
			this.SendPropertyChanging();
			entity.Characters = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BluePrints")]
	public partial class BluePrints : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BluePrintTypeID;
		
		private int _MaxProductionLimit;
		
		private int _MetaGroupID;
		
		private bool _OnMarket;
		
		private EntitySet<industryActivityMaterials> _industryActivityMaterials;
		
		private EntitySet<industryActivities> _industryActivities;
		
		private EntitySet<OwnedBluePrints> _OwnedBluePrints;
		
		private EntityRef<invTypes> _invTypes;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBluePrintTypeIDChanging(int value);
    partial void OnBluePrintTypeIDChanged();
    partial void OnMaxProductionLimitChanging(int value);
    partial void OnMaxProductionLimitChanged();
    partial void OnMetaGroupIDChanging(int value);
    partial void OnMetaGroupIDChanged();
    partial void OnOnMarketChanging(bool value);
    partial void OnOnMarketChanged();
    #endregion
		
		public BluePrints()
		{
			this._industryActivityMaterials = new EntitySet<industryActivityMaterials>(new Action<industryActivityMaterials>(this.attach_industryActivityMaterials), new Action<industryActivityMaterials>(this.detach_industryActivityMaterials));
			this._industryActivities = new EntitySet<industryActivities>(new Action<industryActivities>(this.attach_industryActivities), new Action<industryActivities>(this.detach_industryActivities));
			this._OwnedBluePrints = new EntitySet<OwnedBluePrints>(new Action<OwnedBluePrints>(this.attach_OwnedBluePrints), new Action<OwnedBluePrints>(this.detach_OwnedBluePrints));
			this._invTypes = default(EntityRef<invTypes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BluePrintTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BluePrintTypeID
		{
			get
			{
				return this._BluePrintTypeID;
			}
			set
			{
				if ((this._BluePrintTypeID != value))
				{
					if (this._invTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBluePrintTypeIDChanging(value);
					this.SendPropertyChanging();
					this._BluePrintTypeID = value;
					this.SendPropertyChanged("BluePrintTypeID");
					this.OnBluePrintTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxProductionLimit", DbType="Int NOT NULL")]
		public int MaxProductionLimit
		{
			get
			{
				return this._MaxProductionLimit;
			}
			set
			{
				if ((this._MaxProductionLimit != value))
				{
					this.OnMaxProductionLimitChanging(value);
					this.SendPropertyChanging();
					this._MaxProductionLimit = value;
					this.SendPropertyChanged("MaxProductionLimit");
					this.OnMaxProductionLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaGroupID", DbType="Int NOT NULL")]
		public int MetaGroupID
		{
			get
			{
				return this._MetaGroupID;
			}
			set
			{
				if ((this._MetaGroupID != value))
				{
					this.OnMetaGroupIDChanging(value);
					this.SendPropertyChanging();
					this._MetaGroupID = value;
					this.SendPropertyChanged("MetaGroupID");
					this.OnMetaGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnMarket", DbType="Bit NOT NULL")]
		public bool OnMarket
		{
			get
			{
				return this._OnMarket;
			}
			set
			{
				if ((this._OnMarket != value))
				{
					this.OnOnMarketChanging(value);
					this.SendPropertyChanging();
					this._OnMarket = value;
					this.SendPropertyChanged("OnMarket");
					this.OnOnMarketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BluePrints_industryActivityMaterials", Storage="_industryActivityMaterials", ThisKey="BluePrintTypeID", OtherKey="blueprintTypeID")]
		public EntitySet<industryActivityMaterials> industryActivityMaterials
		{
			get
			{
				return this._industryActivityMaterials;
			}
			set
			{
				this._industryActivityMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BluePrints_industryActivities", Storage="_industryActivities", ThisKey="BluePrintTypeID", OtherKey="blueprintTypeID")]
		public EntitySet<industryActivities> industryActivities
		{
			get
			{
				return this._industryActivities;
			}
			set
			{
				this._industryActivities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BluePrints_OwnedBluePrints", Storage="_OwnedBluePrints", ThisKey="BluePrintTypeID", OtherKey="BluePrintID")]
		public EntitySet<OwnedBluePrints> OwnedBluePrints
		{
			get
			{
				return this._OwnedBluePrints;
			}
			set
			{
				this._OwnedBluePrints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="invTypes_BluePrints", Storage="_invTypes", ThisKey="BluePrintTypeID", OtherKey="typeID", IsForeignKey=true)]
		public invTypes invTypes
		{
			get
			{
				return this._invTypes.Entity;
			}
			set
			{
				invTypes previousValue = this._invTypes.Entity;
				if (((previousValue != value) 
							|| (this._invTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._invTypes.Entity = null;
						previousValue.BluePrints = null;
					}
					this._invTypes.Entity = value;
					if ((value != null))
					{
						value.BluePrints = this;
						this._BluePrintTypeID = value.typeID;
					}
					else
					{
						this._BluePrintTypeID = default(int);
					}
					this.SendPropertyChanged("invTypes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_industryActivityMaterials(industryActivityMaterials entity)
		{
			this.SendPropertyChanging();
			entity.BluePrints = this;
		}
		
		private void detach_industryActivityMaterials(industryActivityMaterials entity)
		{
			this.SendPropertyChanging();
			entity.BluePrints = null;
		}
		
		private void attach_industryActivities(industryActivities entity)
		{
			this.SendPropertyChanging();
			entity.BluePrints = this;
		}
		
		private void detach_industryActivities(industryActivities entity)
		{
			this.SendPropertyChanging();
			entity.BluePrints = null;
		}
		
		private void attach_OwnedBluePrints(OwnedBluePrints entity)
		{
			this.SendPropertyChanging();
			entity.BluePrints = this;
		}
		
		private void detach_OwnedBluePrints(OwnedBluePrints entity)
		{
			this.SendPropertyChanging();
			entity.BluePrints = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.industryActivityMaterials")]
	public partial class industryActivityMaterials : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _blueprintTypeID;
		
		private int _activityID;
		
		private int _materialTypeID;
		
		private int _quantity;
		
		private EntityRef<BluePrints> _BluePrints;
		
		private EntityRef<invTypes> _invTypes;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnblueprintTypeIDChanging(int value);
    partial void OnblueprintTypeIDChanged();
    partial void OnactivityIDChanging(int value);
    partial void OnactivityIDChanged();
    partial void OnmaterialTypeIDChanging(int value);
    partial void OnmaterialTypeIDChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    #endregion
		
		public industryActivityMaterials()
		{
			this._BluePrints = default(EntityRef<BluePrints>);
			this._invTypes = default(EntityRef<invTypes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blueprintTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int blueprintTypeID
		{
			get
			{
				return this._blueprintTypeID;
			}
			set
			{
				if ((this._blueprintTypeID != value))
				{
					if (this._BluePrints.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnblueprintTypeIDChanging(value);
					this.SendPropertyChanging();
					this._blueprintTypeID = value;
					this.SendPropertyChanged("blueprintTypeID");
					this.OnblueprintTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int activityID
		{
			get
			{
				return this._activityID;
			}
			set
			{
				if ((this._activityID != value))
				{
					this.OnactivityIDChanging(value);
					this.SendPropertyChanging();
					this._activityID = value;
					this.SendPropertyChanged("activityID");
					this.OnactivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int materialTypeID
		{
			get
			{
				return this._materialTypeID;
			}
			set
			{
				if ((this._materialTypeID != value))
				{
					if (this._invTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaterialTypeIDChanging(value);
					this.SendPropertyChanging();
					this._materialTypeID = value;
					this.SendPropertyChanged("materialTypeID");
					this.OnmaterialTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BluePrints_industryActivityMaterials", Storage="_BluePrints", ThisKey="blueprintTypeID", OtherKey="BluePrintTypeID", IsForeignKey=true)]
		public BluePrints BluePrints
		{
			get
			{
				return this._BluePrints.Entity;
			}
			set
			{
				BluePrints previousValue = this._BluePrints.Entity;
				if (((previousValue != value) 
							|| (this._BluePrints.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BluePrints.Entity = null;
						previousValue.industryActivityMaterials.Remove(this);
					}
					this._BluePrints.Entity = value;
					if ((value != null))
					{
						value.industryActivityMaterials.Add(this);
						this._blueprintTypeID = value.BluePrintTypeID;
					}
					else
					{
						this._blueprintTypeID = default(int);
					}
					this.SendPropertyChanged("BluePrints");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="invTypes_industryActivityMaterials", Storage="_invTypes", ThisKey="materialTypeID", OtherKey="typeID", IsForeignKey=true)]
		public invTypes invTypes
		{
			get
			{
				return this._invTypes.Entity;
			}
			set
			{
				invTypes previousValue = this._invTypes.Entity;
				if (((previousValue != value) 
							|| (this._invTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._invTypes.Entity = null;
						previousValue.industryActivityMaterials.Remove(this);
					}
					this._invTypes.Entity = value;
					if ((value != null))
					{
						value.industryActivityMaterials.Add(this);
						this._materialTypeID = value.typeID;
					}
					else
					{
						this._materialTypeID = default(int);
					}
					this.SendPropertyChanged("invTypes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.industryActivities")]
	public partial class industryActivities : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _blueprintTypeID;
		
		private int _activityID;
		
		private int _time;
		
		private EntityRef<BluePrints> _BluePrints;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnblueprintTypeIDChanging(int value);
    partial void OnblueprintTypeIDChanged();
    partial void OnactivityIDChanging(int value);
    partial void OnactivityIDChanged();
    partial void OntimeChanging(int value);
    partial void OntimeChanged();
    #endregion
		
		public industryActivities()
		{
			this._BluePrints = default(EntityRef<BluePrints>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blueprintTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int blueprintTypeID
		{
			get
			{
				return this._blueprintTypeID;
			}
			set
			{
				if ((this._blueprintTypeID != value))
				{
					if (this._BluePrints.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnblueprintTypeIDChanging(value);
					this.SendPropertyChanging();
					this._blueprintTypeID = value;
					this.SendPropertyChanged("blueprintTypeID");
					this.OnblueprintTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int activityID
		{
			get
			{
				return this._activityID;
			}
			set
			{
				if ((this._activityID != value))
				{
					this.OnactivityIDChanging(value);
					this.SendPropertyChanging();
					this._activityID = value;
					this.SendPropertyChanged("activityID");
					this.OnactivityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="Int NOT NULL")]
		public int time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BluePrints_industryActivities", Storage="_BluePrints", ThisKey="blueprintTypeID", OtherKey="BluePrintTypeID", IsForeignKey=true)]
		public BluePrints BluePrints
		{
			get
			{
				return this._BluePrints.Entity;
			}
			set
			{
				BluePrints previousValue = this._BluePrints.Entity;
				if (((previousValue != value) 
							|| (this._BluePrints.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BluePrints.Entity = null;
						previousValue.industryActivities.Remove(this);
					}
					this._BluePrints.Entity = value;
					if ((value != null))
					{
						value.industryActivities.Add(this);
						this._blueprintTypeID = value.BluePrintTypeID;
					}
					else
					{
						this._blueprintTypeID = default(int);
					}
					this.SendPropertyChanged("BluePrints");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OwnedBluePrints")]
	public partial class OwnedBluePrints : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ItemID;
		
		private int _BluePrintID;
		
		private long _Owner;
		
		private bool _CharacterOwned;
		
		private long _LocationID;
		
		private string _LocationFlag;
		
		private int _Quantity;
		
		private int _TimeEfficiency;
		
		private int _MaterialEfficiency;
		
		private int _Runs;
		
		private System.DateTime _UpdateTime;
		
		private double _Cost;
		
		private EntityRef<BluePrints> _BluePrints;
		
		private EntityRef<Characters> _Characters;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(long value);
    partial void OnItemIDChanged();
    partial void OnBluePrintIDChanging(int value);
    partial void OnBluePrintIDChanged();
    partial void OnOwnerChanging(long value);
    partial void OnOwnerChanged();
    partial void OnCharacterOwnedChanging(bool value);
    partial void OnCharacterOwnedChanged();
    partial void OnLocationIDChanging(long value);
    partial void OnLocationIDChanged();
    partial void OnLocationFlagChanging(string value);
    partial void OnLocationFlagChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnTimeEfficiencyChanging(int value);
    partial void OnTimeEfficiencyChanged();
    partial void OnMaterialEfficiencyChanging(int value);
    partial void OnMaterialEfficiencyChanged();
    partial void OnRunsChanging(int value);
    partial void OnRunsChanged();
    partial void OnUpdateTimeChanging(System.DateTime value);
    partial void OnUpdateTimeChanged();
    partial void OnCostChanging(double value);
    partial void OnCostChanged();
    #endregion
		
		public OwnedBluePrints()
		{
			this._BluePrints = default(EntityRef<BluePrints>);
			this._Characters = default(EntityRef<Characters>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BluePrintID", DbType="Int NOT NULL")]
		public int BluePrintID
		{
			get
			{
				return this._BluePrintID;
			}
			set
			{
				if ((this._BluePrintID != value))
				{
					if (this._BluePrints.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBluePrintIDChanging(value);
					this.SendPropertyChanging();
					this._BluePrintID = value;
					this.SendPropertyChanged("BluePrintID");
					this.OnBluePrintIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="BigInt NOT NULL")]
		public long Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					if (this._Characters.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerChanging(value);
					this.SendPropertyChanging();
					this._Owner = value;
					this.SendPropertyChanged("Owner");
					this.OnOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharacterOwned", DbType="Bit NOT NULL")]
		public bool CharacterOwned
		{
			get
			{
				return this._CharacterOwned;
			}
			set
			{
				if ((this._CharacterOwned != value))
				{
					this.OnCharacterOwnedChanging(value);
					this.SendPropertyChanging();
					this._CharacterOwned = value;
					this.SendPropertyChanged("CharacterOwned");
					this.OnCharacterOwnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="BigInt NOT NULL")]
		public long LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationFlag", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LocationFlag
		{
			get
			{
				return this._LocationFlag;
			}
			set
			{
				if ((this._LocationFlag != value))
				{
					this.OnLocationFlagChanging(value);
					this.SendPropertyChanging();
					this._LocationFlag = value;
					this.SendPropertyChanged("LocationFlag");
					this.OnLocationFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEfficiency", DbType="Int NOT NULL")]
		public int TimeEfficiency
		{
			get
			{
				return this._TimeEfficiency;
			}
			set
			{
				if ((this._TimeEfficiency != value))
				{
					this.OnTimeEfficiencyChanging(value);
					this.SendPropertyChanging();
					this._TimeEfficiency = value;
					this.SendPropertyChanged("TimeEfficiency");
					this.OnTimeEfficiencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialEfficiency", DbType="Int NOT NULL")]
		public int MaterialEfficiency
		{
			get
			{
				return this._MaterialEfficiency;
			}
			set
			{
				if ((this._MaterialEfficiency != value))
				{
					this.OnMaterialEfficiencyChanging(value);
					this.SendPropertyChanging();
					this._MaterialEfficiency = value;
					this.SendPropertyChanged("MaterialEfficiency");
					this.OnMaterialEfficiencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Runs", DbType="Int NOT NULL")]
		public int Runs
		{
			get
			{
				return this._Runs;
			}
			set
			{
				if ((this._Runs != value))
				{
					this.OnRunsChanging(value);
					this.SendPropertyChanging();
					this._Runs = value;
					this.SendPropertyChanged("Runs");
					this.OnRunsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateTime
		{
			get
			{
				return this._UpdateTime;
			}
			set
			{
				if ((this._UpdateTime != value))
				{
					this.OnUpdateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdateTime = value;
					this.SendPropertyChanged("UpdateTime");
					this.OnUpdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Float NOT NULL")]
		public double Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BluePrints_OwnedBluePrints", Storage="_BluePrints", ThisKey="BluePrintID", OtherKey="BluePrintTypeID", IsForeignKey=true)]
		public BluePrints BluePrints
		{
			get
			{
				return this._BluePrints.Entity;
			}
			set
			{
				BluePrints previousValue = this._BluePrints.Entity;
				if (((previousValue != value) 
							|| (this._BluePrints.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BluePrints.Entity = null;
						previousValue.OwnedBluePrints.Remove(this);
					}
					this._BluePrints.Entity = value;
					if ((value != null))
					{
						value.OwnedBluePrints.Add(this);
						this._BluePrintID = value.BluePrintTypeID;
					}
					else
					{
						this._BluePrintID = default(int);
					}
					this.SendPropertyChanged("BluePrints");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Characters_OwnedBluePrints", Storage="_Characters", ThisKey="Owner", OtherKey="CharacterID", IsForeignKey=true)]
		public Characters Characters
		{
			get
			{
				return this._Characters.Entity;
			}
			set
			{
				Characters previousValue = this._Characters.Entity;
				if (((previousValue != value) 
							|| (this._Characters.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Characters.Entity = null;
						previousValue.OwnedBluePrints.Remove(this);
					}
					this._Characters.Entity = value;
					if ((value != null))
					{
						value.OwnedBluePrints.Add(this);
						this._Owner = value.CharacterID;
					}
					else
					{
						this._Owner = default(long);
					}
					this.SendPropertyChanged("Characters");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
